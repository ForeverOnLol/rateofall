from common.views import CommonView
from debate_game.models import RoundInfo, Result
from telegram.consts import bot


class DebateGameTgView(CommonView):
    @staticmethod
    async def create(chat_id: int):
        await bot.send_message(chat_id=chat_id,
                               text=f'üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É *–î–µ–±–∞—Ç—ã*! üåü \n –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /me, '
                                    f'—á—Ç–æ–±—ã —Å—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º. –í—Å–µ–≥–æ –º–æ–∂–µ—Ç –±—ã—Ç—å 2–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤')

    @staticmethod
    async def add_player(chat_id: int, username: str):
        await bot.send_message(chat_id=chat_id, text=f'{username} —Ç–µ–ø–µ—Ä—å —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –¥–µ–±–∞—Ç–∏—Ä—É—é—â–∏—Ö üåü')

    @staticmethod
    async def get_current_player(chat_id: int, username: str, position: str):
        styled_message = f'–û—Ç–≤–µ—á–∞–µ—Ç *{username}* —Å –ø–æ–∑–∏—Ü–∏–µ–π *{position}* üé§'
        await bot.send_message(chat_id=chat_id, text=styled_message, parse_mode="Markdown")

    @staticmethod
    async def get_round_info(chat_id: int, round_info: RoundInfo):
        await bot.send_message(chat_id=chat_id,
                               text='**–¢–µ–º–∞ —Ä–∞—É–Ω–¥–∞:**\n\n'
                                    f'*{round_info.word}*\n\n'
                                    f'{round_info.positions[0].user_name} -> {round_info.positions[0].position}\n'
                                    f'{round_info.positions[1].user_name} -> {round_info.positions[1].position}\n'
                                    f'–ö–∞–∫ —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–∏ –±—É–¥—É—Ç –≥–æ—Ç–æ–≤—ã –æ—Ç–≤–µ—á–∞—Ç—å –≤–≤–µ–¥–∏—Ç–µ /next.',
                               parse_mode="Markdown")

    @staticmethod
    async def stop_answer(chat_id: int, username: str):
        await bot.send_message(chat_id=chat_id,
                               text=f'{username} *–ë–û–õ–¨–®–ï –ù–ï –ú–û–ñ–ï–¢ –ì–û–í–û–†–ò–¢–¨* ü§ê.')

    @staticmethod
    async def error(error_text, chat_id: int = 0):
        # await bot.send_message(chat_id=chat_id, text=error_text)
        print(f'{error_text}')

    @staticmethod
    async def result(chat_id: int, result: Result):
        player_scores = '\n'.join([f'{player.name} –ø–æ–ª—É—á–∞–µ—Ç {player.score} –±–∞–ª–ª–æ–≤' for player in result.players])
        text = (
            f'üèÜ *–ò—Ç–æ–≥–∏ –∏–≥—Ä—ã* üèÜ:\n\n'
            f'{player_scores}\n\n'
            f'–ü–æ–±–µ–¥–∏—Ç–µ–ª—å - *{result.winner_name}* üéâ'
        )

        await bot.send_message(chat_id=chat_id, text=text, parse_mode="Markdown")
